// Generated by CoffeeScript 1.6.2
(function() {
  var TwitterStrategy, connect, passport, url, _redirect, _router;

  connect = require("connect");

  passport = require('passport');

  TwitterStrategy = require('passport-twitter').Strategy;

  url = require("url");

  _redirect = function(req, res, next) {
    res.redirect = function(url) {
      this.writeHead(302, {
        'Location': url
      });
      return this.end();
    };
    return next();
  };

  _router = function(req, res, next) {
    var path;

    path = url.parse(req.url).pathname;
    if (path === "/auth/twitter") {
      console.log("auth");
      return passport.authenticate('twitter')(req, res, next);
    } else if (path === "/auth/twitter/callback") {
      return passport.authenticate('twitter', {
        successRedirect: '/',
        failureRedirect: '/login'
      })(req, res, next);
    } else if (path === "/") {
      req.url = "/main.html";
      return next();
    } else if (path.match(/^\/\w+\/\w+$/)) {
      res.writeHead(302, {
        'Location': '/'
      });
      return res.end();
    } else {
      return next();
    }
  };

  passport.use(new TwitterStrategy({
    consumerKey: process.env.TWITTER_CONSUMER_KEY,
    consumerSecret: process.env.TWITTER_CONSUMER_SECRET,
    callbackURL: "http://localhost:8001/auth/twitter/callback"
  }, function(token, tokenSecret, profile, done) {
    return done(null, {
      name: "twitter@" + profile.username,
      displayName: profile.displayname,
      img: profile.photos[0]
    });
  }));

  passport.serializeUser(function(user, done) {
    return done(null, user.name + ":" + user.displayName + ":" + user.img);
  });

  passport.deserializeUser(function(id, done) {
    var sp;

    sp = id.split(":");
    return done(null, {
      name: sp[0],
      displayName: sp[1],
      img: sp[2]
    });
  });

  connect().use(connect.cookieParser()).use(_redirect).use(connect.query()).use(connect.session({
    secret: 'keyboard cat'
  })).use(passport.initialize()).use(_router).use(connect["static"]("public")).listen(process.env.PORT || 8001);

}).call(this);

/*
//@ sourceMappingURL=server.map
*/
