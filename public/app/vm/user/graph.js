// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["ural/vm/itemVM", "app/dataProvider", "ural/modules/pubSub"], function(itemVM, dataProvider, pubSub) {
    var Graph;

    return Graph = (function(_super) {
      __extends(Graph, _super);

      function Graph(resource, _index) {
        this.ref = ko.observable();
        this.name = ko.observable();
        this.date = ko.observable();
        Graph.__super__.constructor.call(this, "graph", _index);
      }

      Graph.prototype.onCreateItem = function() {
        return new Graph(this.resource, this._index);
      };

      Graph.prototype.onCreate = function(done) {
        var data;

        data = this.toData();
        return dataProvider.create("graphs", data, done);
      };

      Graph.prototype.onRemove = function(done) {
        var data;

        data = this.toData();
        return dataProvider.ajax("graphs", "delete", data, done);
      };

      Graph.prototype.onUpdate = function(done) {
        var data;

        data = this.toData();
        return dataProvider.ajax("graphs", "put", data, done);
      };

      Graph.prototype.create = function(done) {
        var _this = this;

        return Graph.__super__.create.call(this, function(err) {
          done(err);
          if (!err) {
            return _this.openGraph();
          }
        });
      };

      Graph.prototype.open = function(data, event) {
        event.preventDefault();
        return pubSub.pub("href", "change", {
          href: "/graph/panel/" + (this.ref())
        });
      };

      return Graph;

    })(itemVM);
  });

}).call(this);
